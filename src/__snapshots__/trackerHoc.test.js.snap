// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false and area equals "default-area" when render promiseTrackerHoc without props 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false and area equals "testArea" when feeding area equals "testArea" 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "testArea",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false and area equals "testArea" when feeding area equals "testArea" and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "testArea",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals false 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals false and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals false to different area 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals false to different area and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals true to different area 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 0 and emit event with progress equals true to different area and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and emit event with progress equals false 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and emit event with progress equals false and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and emit event with progress equals false to different area and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and emit event with progress equals true and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false when counter is 1 and emit event with progress equals true to different area and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals false, area equals "default-area" and customProp equals "test" when feeding customProp equals "test" 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "customProp": "test",
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": false
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 0 and emit event with progress equals true 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 0 and emit event with progress equals true and delay equals 300 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 300
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 1 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 1 and emit event with progress equals false to different area 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 1 and emit event with progress equals true 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;

exports[`trackerHoc Initial Status should render component with trackedPromiseInProgress equals true when counter is 1 and emit event with progress equals true to different area 1`] = `
<DocumentFragment>
  <pre>
    props: {
    "config": {
        "area": "default-area",
        "delay": 0
    },
    "promiseInProgress": true
}
  </pre>
</DocumentFragment>
`;
